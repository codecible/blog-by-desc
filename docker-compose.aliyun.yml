# 生产环境compose配置
services:
  nginx:
    build:
      context: .
      dockerfile: docker/nginx_aliyun.Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - frontend_build:/usr/share/nginx/html:ro
      - ./logs/nginx:/var/log/nginx:rw
    depends_on:
      frontend:
        condition: service_completed_successfully
      backend:
        condition: service_healthy
    networks:
      - app-network
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    environment:
      - TZ=Asia/Shanghai
      - LANG=C.UTF-8
      - LC_ALL=C.UTF-8
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

  frontend:
    build:
      context: .
      dockerfile: docker/frontend_aliyun.Dockerfile
    volumes:
      - frontend_build:/app/dist:rw
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          memory: 2G
    environment:
      - NODE_ENV=production
      - NODE_OPTIONS="--max-old-space-size=3072"
      - TZ=Asia/Shanghai
      - LANG=C.UTF-8
      - LC_ALL=C.UTF-8
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  backend:
    build:
      context: .
      dockerfile: docker/backend_aliyun.Dockerfile
    expose:
      - "3001"
    env_file:
      - backend/.env.production
    volumes:
      - ./logs:/app/logs:rw
      - ./output:/app/output:rw
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: always
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G
    command: uvicorn backend.main:app --host 0.0.0.0 --port 3001 --workers 8 --timeout-keep-alive 600 --timeout-graceful-shutdown 600
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - ENVIRONMENT=production
      - PYTHONOPTIMIZE=1
      - TZ=Asia/Shanghai
      - LANG=C.UTF-8
      - LC_ALL=C.UTF-8
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

networks:
  app-network:
    name: blog-network
    external: true

volumes:
  frontend_build:
    driver: local
  logs:
    driver: local
  output:
    driver: local

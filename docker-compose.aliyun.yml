services:
  nginx:
    build:
      context: .
      dockerfile: docker/nginx_aliyun.Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
      - frontend_dist:/usr/share/nginx/html:ro
    depends_on:
      frontend:
        condition: service_completed_successfully
      backend:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 500M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    build:
      context: .
      dockerfile: docker/frontend_aliyun.Dockerfile
    volumes:
      - frontend_dist:/app/dist:rw
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          memory: 1G
    environment:
      # 设置Node.js的内存限制为1.5GB,防止构建时内存溢出
      # 这个设置会覆盖Node.js默认的内存限制(约1GB)
      - NODE_OPTIONS="--max-old-space-size=1536"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  backend:
    build:
      context: .
      dockerfile: docker/backend_aliyun.Dockerfile
    expose:
      - "3001"
    env_file:
      - backend/.env.production
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 2
      start_period: 10s
    restart: unless-stopped
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
    command: >
      uvicorn main:app 
      --host 0.0.0.0 
      --port 3001 
      --workers 4
      --log-level info
    environment:
      - PYTHONUNBUFFERED=1
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  app-network:
    # 方案1：使用外部网络（需要预先创建）
    name: blog-network
    external: true

volumes:
  frontend_dist:
  logs:
  uploads: